{
  "properties": {
    "displayName": "k8s: deny resource creation without requests and limits",
    "policyType": "Custom",
    "mode": "Microsoft.Kubernetes.Data",
    "metadata": {
      "category": "Kubernetes",
      "createdBy": "cb08efcc-2276-4913-99df-fac7a6bde5d2",
      "createdOn": "2022-11-16T12:11:52.1170155Z",
      "updatedBy": "cb08efcc-2276-4913-99df-fac7a6bde5d2",
      "updatedOn": "2022-11-16T13:36:15.8225234Z"
    },
    "parameters": {
      "effect": {
        "type": "String",
        "metadata": {
          "displayName": "Effect",
          "description": "'audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'deny' blocks the non-compliant resource creation or update. 'disabled' turns off the policy."
        },
        "allowedValues": [
          "audit",
          "deny",
          "disabled"
        ],
        "defaultValue": "deny"
      },
      "excludedNamespaces": {
        "type": "Array",
        "metadata": {
          "displayName": "Namespace exclusions",
          "description": "List of Kubernetes namespaces to exclude from policy evaluation."
        },
        "defaultValue": [
          "kube-system",
          "gatekeeper-system",
          "azure-arc"
        ]
      },
      "namespaces": {
        "type": "Array",
        "metadata": {
          "displayName": "Namespace inclusions",
          "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces."
        },
        "defaultValue": []
      },
      "labelSelector": {
        "type": "Object",
        "metadata": {
          "displayName": "Kubernetes label selector",
          "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources."
        },
        "defaultValue": {},
        "schema": {
          "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
          "type": "object",
          "properties": {
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "minProperties": 1
            },
            "matchExpressions": {
              "description": "matchExpressions is a list of values, a key, and an operator.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.",
                    "type": "string",
                    "enum": [
                      "In",
                      "NotIn",
                      "Exists",
                      "DoesNotExist"
                    ]
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "key",
                  "operator"
                ],
                "additionalProperties": false
              },
              "minItems": 1
            }
          },
          "additionalProperties": false
        }
      },
      "exemptImages": {
        "type": "Array",
        "metadata": {
          "displayName": "exemptImages",
          "description": "Any container that uses an image that matches an entry in this list will be excluded from enforcement. Prefix-matching can be signified with `*`. For example: `my-image-*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository."
        },
        "defaultValue": []
      },
      "limits": {
        "type": "Array",
        "metadata": {
          "displayName": "limits",
          "description": "array of limited resources [\"cpu\", \"memory\"]"
        },
        "defaultValue": [
          "cpu",
          "memory"
        ]
      },
      "requests": {
        "type": "Array",
        "metadata": {
          "displayName": "requests",
          "description": "array of requested resources [\"cpu\", \"memory\"]"
        },
        "defaultValue": [
          "cpu",
          "memory"
        ]
      }
    },
    "policyRule": {
      "if": {
        "field": "type",
        "in": [
          "Microsoft.ContainerService/managedClusters"
        ]
      },
      "then": {
        "effect": "[parameters('effect')]",
        "details": {
          "templateInfo": {
            "sourceType": "Base64Encoded",
            "content": "YXBpVmVyc2lvbjogdGVtcGxhdGVzLmdhdGVrZWVwZXIuc2gvdjFiZXRhMQ0Ka2luZDogQ29uc3RyYWludFRlbXBsYXRlDQptZXRhZGF0YToNCiAgbmFtZTogazhzcmVxdWlyZWRyZXNvdXJjZXMNCiAgYW5ub3RhdGlvbnM6DQogICAgbWV0YWRhdGEuZ2F0ZWtlZXBlci5zaC90aXRsZTogIlJlcXVpcmVkIFJlc291cmNlcyINCiAgICBtZXRhZGF0YS5nYXRla2VlcGVyLnNoL3ZlcnNpb246IDEuMC4wDQogICAgZGVzY3JpcHRpb246ID4tDQogICAgICBSZXF1aXJlcyBjb250YWluZXJzIHRvIGhhdmUgZGVmaW5lZCByZXNvdXJjZXMgc2V0Lg0KDQogICAgICBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8NCnNwZWM6DQogIGNyZDoNCiAgICBzcGVjOg0KICAgICAgbmFtZXM6DQogICAgICAgIGtpbmQ6IEs4c1JlcXVpcmVkUmVzb3VyY2VzDQogICAgICB2YWxpZGF0aW9uOg0KICAgICAgICAjIFNjaGVtYSBmb3IgdGhlIGBwYXJhbWV0ZXJzYCBmaWVsZA0KICAgICAgICBvcGVuQVBJVjNTY2hlbWE6DQogICAgICAgICAgdHlwZTogb2JqZWN0DQogICAgICAgICAgcHJvcGVydGllczoNCiAgICAgICAgICAgIGV4ZW1wdEltYWdlczoNCiAgICAgICAgICAgICAgZGVzY3JpcHRpb246ID4tDQogICAgICAgICAgICAgICAgQW55IGNvbnRhaW5lciB0aGF0IHVzZXMgYW4gaW1hZ2UgdGhhdCBtYXRjaGVzIGFuIGVudHJ5IGluIHRoaXMgbGlzdCB3aWxsIGJlIGV4Y2x1ZGVkDQogICAgICAgICAgICAgICAgZnJvbSBlbmZvcmNlbWVudC4gUHJlZml4LW1hdGNoaW5nIGNhbiBiZSBzaWduaWZpZWQgd2l0aCBgKmAuIEZvciBleGFtcGxlOiBgbXktaW1hZ2UtKmAuDQoNCiAgICAgICAgICAgICAgICBJdCBpcyByZWNvbW1lbmRlZCB0aGF0IHVzZXJzIHVzZSB0aGUgZnVsbHktcXVhbGlmaWVkIERvY2tlciBpbWFnZSBuYW1lIChlLmcuIHN0YXJ0IHdpdGggYSBkb21haW4gbmFtZSkNCiAgICAgICAgICAgICAgICBpbiBvcmRlciB0byBhdm9pZCB1bmV4cGVjdGVkbHkgZXhlbXB0aW5nIGltYWdlcyBmcm9tIGFuIHVudHJ1c3RlZCByZXBvc2l0b3J5Lg0KICAgICAgICAgICAgICB0eXBlOiBhcnJheQ0KICAgICAgICAgICAgICBpdGVtczoNCiAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcNCiAgICAgICAgICAgIGxpbWl0czoNCiAgICAgICAgICAgICAgdHlwZTogYXJyYXkNCiAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICJBIGxpc3Qgb2YgbGltaXRzIHRoYXQgc2hvdWxkIGJlIGVuZm9yY2VkIChjcHUsIG1lbW9yeSBvciBib3RoKS4iDQogICAgICAgICAgICAgIGl0ZW1zOg0KICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZw0KICAgICAgICAgICAgICAgIGVudW06DQogICAgICAgICAgICAgICAgLSBjcHUNCiAgICAgICAgICAgICAgICAtIG1lbW9yeQ0KICAgICAgICAgICAgcmVxdWVzdHM6DQogICAgICAgICAgICAgIHR5cGU6IGFycmF5DQogICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAiQSBsaXN0IG9mIHJlcXVlc3RzIHRoYXQgc2hvdWxkIGJlIGVuZm9yY2VkIChjcHUsIG1lbW9yeSBvciBib3RoKS4iDQogICAgICAgICAgICAgIGl0ZW1zOg0KICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZw0KICAgICAgICAgICAgICAgIGVudW06DQogICAgICAgICAgICAgICAgLSBjcHUNCiAgICAgICAgICAgICAgICAtIG1lbW9yeQ0KICB0YXJnZXRzOg0KICAgIC0gdGFyZ2V0OiBhZG1pc3Npb24uazhzLmdhdGVrZWVwZXIuc2gNCiAgICAgIHJlZ286IHwNCiAgICAgICAgcGFja2FnZSBrOHNyZXF1aXJlZHJlc291cmNlcw0KDQogICAgICAgIGltcG9ydCBkYXRhLmxpYi5leGVtcHRfY29udGFpbmVyLmlzX2V4ZW1wdA0KDQogICAgICAgIHZpb2xhdGlvblt7Im1zZyI6IG1zZ31dIHsNCiAgICAgICAgICBnZW5lcmFsX3Zpb2xhdGlvblt7Im1zZyI6IG1zZywgImZpZWxkIjogImNvbnRhaW5lcnMifV0NCiAgICAgICAgfQ0KDQogICAgICAgIHZpb2xhdGlvblt7Im1zZyI6IG1zZ31dIHsNCiAgICAgICAgICBnZW5lcmFsX3Zpb2xhdGlvblt7Im1zZyI6IG1zZywgImZpZWxkIjogImluaXRDb250YWluZXJzIn1dDQogICAgICAgIH0NCg0KICAgICAgICBnZW5lcmFsX3Zpb2xhdGlvblt7Im1zZyI6IG1zZywgImZpZWxkIjogZmllbGR9XSB7DQogICAgICAgICAgY29udGFpbmVyIDo9IGlucHV0LnJldmlldy5vYmplY3Quc3BlY1tmaWVsZF1bX10NCiAgICAgICAgICBub3QgaXNfZXhlbXB0KGNvbnRhaW5lcikNCiAgICAgICAgICBwcm92aWRlZCA6PSB7cmVzb3VyY2VfdHlwZSB8IGNvbnRhaW5lci5yZXNvdXJjZXMubGltaXRzW3Jlc291cmNlX3R5cGVdfQ0KICAgICAgICAgIHJlcXVpcmVkIDo9IHtyZXNvdXJjZV90eXBlIHwgcmVzb3VyY2VfdHlwZSA6PSBpbnB1dC5wYXJhbWV0ZXJzLmxpbWl0c1tfXX0NCiAgICAgICAgICBtaXNzaW5nIDo9IHJlcXVpcmVkIC0gcHJvdmlkZWQNCiAgICAgICAgICBjb3VudChtaXNzaW5nKSA+IDANCiAgICAgICAgICBtc2cgOj0gc3ByaW50ZigiY29udGFpbmVyIDwldj4gZG9lcyBub3QgaGF2ZSA8JXY+IGxpbWl0cyBkZWZpbmVkIiwgW2NvbnRhaW5lci5uYW1lLCBtaXNzaW5nXSkNCiAgICAgICAgfQ0KDQogICAgICAgIGdlbmVyYWxfdmlvbGF0aW9uW3sibXNnIjogbXNnLCAiZmllbGQiOiBmaWVsZH1dIHsNCiAgICAgICAgICBjb250YWluZXIgOj0gaW5wdXQucmV2aWV3Lm9iamVjdC5zcGVjW2ZpZWxkXVtfXQ0KICAgICAgICAgIG5vdCBpc19leGVtcHQoY29udGFpbmVyKQ0KICAgICAgICAgIHByb3ZpZGVkIDo9IHtyZXNvdXJjZV90eXBlIHwgY29udGFpbmVyLnJlc291cmNlcy5yZXF1ZXN0c1tyZXNvdXJjZV90eXBlXX0NCiAgICAgICAgICByZXF1aXJlZCA6PSB7cmVzb3VyY2VfdHlwZSB8IHJlc291cmNlX3R5cGUgOj0gaW5wdXQucGFyYW1ldGVycy5yZXF1ZXN0c1tfXX0NCiAgICAgICAgICBtaXNzaW5nIDo9IHJlcXVpcmVkIC0gcHJvdmlkZWQNCiAgICAgICAgICBjb3VudChtaXNzaW5nKSA+IDANCiAgICAgICAgICBtc2cgOj0gc3ByaW50ZigiY29udGFpbmVyIDwldj4gZG9lcyBub3QgaGF2ZSA8JXY+IHJlcXVlc3RzIGRlZmluZWQiLCBbY29udGFpbmVyLm5hbWUsIG1pc3NpbmddKQ0KICAgICAgICB9DQogICAgICBsaWJzOg0KICAgICAgICAtIHwNCiAgICAgICAgICBwYWNrYWdlIGxpYi5leGVtcHRfY29udGFpbmVyDQoNCiAgICAgICAgICBpc19leGVtcHQoY29udGFpbmVyKSB7DQogICAgICAgICAgICAgIGV4ZW1wdF9pbWFnZXMgOj0gb2JqZWN0LmdldChvYmplY3QuZ2V0KGlucHV0LCAicGFyYW1ldGVycyIsIHt9KSwgImV4ZW1wdEltYWdlcyIsIFtdKQ0KICAgICAgICAgICAgICBpbWcgOj0gY29udGFpbmVyLmltYWdlDQogICAgICAgICAgICAgIGV4ZW1wdGlvbiA6PSBleGVtcHRfaW1hZ2VzW19dDQogICAgICAgICAgICAgIF9tYXRjaGVzX2V4ZW1wdGlvbihpbWcsIGV4ZW1wdGlvbikNCiAgICAgICAgICB9DQoNCiAgICAgICAgICBfbWF0Y2hlc19leGVtcHRpb24oaW1nLCBleGVtcHRpb24pIHsNCiAgICAgICAgICAgICAgbm90IGVuZHN3aXRoKGV4ZW1wdGlvbiwgIioiKQ0KICAgICAgICAgICAgICBleGVtcHRpb24gPT0gaW1nDQogICAgICAgICAgfQ0KDQogICAgICAgICAgX21hdGNoZXNfZXhlbXB0aW9uKGltZywgZXhlbXB0aW9uKSB7DQogICAgICAgICAgICAgIGVuZHN3aXRoKGV4ZW1wdGlvbiwgIioiKQ0KICAgICAgICAgICAgICBwcmVmaXggOj0gdHJpbV9zdWZmaXgoZXhlbXB0aW9uLCAiKiIpDQogICAgICAgICAgICAgIHN0YXJ0c3dpdGgoaW1nLCBwcmVmaXgpDQogICAgICAgICAgfQ0K"
          },
          "apiGroups": [
            ""
          ],
          "kinds": [
            "Pod"
          ],
          "namespaces": "[parameters('namespaces')]",
          "excludedNamespaces": "[parameters('excludedNamespaces')]",
          "labelSelector": "[parameters('labelSelector')]",
          "values": {
            "exemptImages": "[parameters('exemptImages')]",
            "limits": "[parameters('limits')]",
            "requests": "[parameters('requests')]"
          }
        }
      }
    }
  },
  "id": "/providers/Microsoft.Management/managementGroups/mgdpwgroup/providers/Microsoft.Authorization/policyDefinitions/c045263e-29fb-4c85-b4cb-64b2b7f74795",
  "type": "Microsoft.Authorization/policyDefinitions",
  "name": "c045263e-29fb-4c85-b4cb-64b2b7f74795",
  "systemData": {
    "createdBy": "Pavlo.Azadmin@dpwapps.com",
    "createdByType": "User",
    "createdAt": "2022-11-16T12:11:51.8537486Z",
    "lastModifiedBy": "Pavlo.Azadmin@dpwapps.com",
    "lastModifiedByType": "User",
    "lastModifiedAt": "2022-11-16T13:36:15.790597Z"
  }
}